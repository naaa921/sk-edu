3.3.1 취약한 패스워드 설정 여부
패스워드를 취약하게 설정 시 Brute Force (무차별 대입 공격), Dictionary Attack (사전 공격), Rainbow Table Attack (레인보우 테이블 공격)에 취약하게 된다. 이를 위해서 비밀번호 복잡도를 대소문자, 특수문자를 포함하여 8자 이상으로 작성될 수 있도록 클라이언트와 서버에서 검증하도록 코드를 추가해주어야 한다. 또한 데이터베이스에 패스워드 저장시 해쉬 함수를 적용하여 저장하여 DB정보가 유출 되더라도 회원의 개인정보를 보호할 수 있도록 한다.

3.3.2 어플리케이션/장비 기본 패스워드 설정 여부
기본 패스워드는 어플리케이션, 네트워크 장비, 서버, 데이터베이스 등의 초기 설정 계정 정보를 의미한다.
공격자는 기본 패스워드를 이용해 시스템에 무단 접근하여 데이터 유출, 시스템 제어, 악성코드 설치 등의 공격을 수행할 수 있다.
기본 패스워드 설정으로 인해 발생 가능한 문제점은 무단접든, 권한 상승, 데이터 유출 등이 있다.
따라서 기본 패스워드는 정책에 따라서 보안에 강력한 패스워드로 변경하도록 해야한다.

3.4.1 쿠키 재사용
쿠키에 담긴 동일한 세션값을 재사용할 시 공격자가 탈취한 쿠키로 사용자의 인증을 우회화여 악의적인 행동을 할 수 있습니다. 
이를 대응하기 위해 서버측에서 쿠키값이 노출되지 않도록 HttpOnly 속성을 적용하고 쿠키값의 전송을 HTTPS 에서만 전송될 수 있도록 secure 속성을 적용해야 합니다. 
또한 쿠키가 노출되었을 때를 대비하여 쿠키의 타임아웃값을 30분으로 설정하여 생성된지 30분이 지난 쿠키를 통한 차단하여야 하며 사용자가 재로그인시 새로운 쿠키값을 할당해주어야 합니다. 

3.4.2 클라이언트 인증 우회 여부 
클라이언트에서만 인증을 하는 경우 우회가 가능한 취약점이 발견됩니다. OyseMall 사이트의 경우 회원가입시 인증 우회가 가능한 취약점이 발견되었기 때문에 서버에서 클라이언트에서 전달한 값을 강제적으로 인증하도록 코드를 추가해 주어야 합니다. 

3.5.1 악의적인 스크립트 필터링
XSS를 허용하게 될 경우 공격자는 다른 사용자의 쿠키탈취, 피싱 사이트 유도 등 다양한 공격을 수행하게 할 수 있습니다.  XSS를 대응하기 위해 <script></script> 태그, 이벤트 핸들러 들을 차단해야 하며 특수문자들에 대해서 이스케이프 처리를 하고 화이트리스트 기반 입력값 검증을 수행해야 합니다. 
	
3.5.2 TRACE 옵션 허용 여부 
TRACE 메서드를 허용하게 될 경우 XST 공격에 취약할 수 있습니다. XST를 이용하여 사용자의 쿠키, 세션 정보를 탈취할 수 있기 때문에 웹 서버에서 TRACE 메서드를 비활성화하고 WAF에서 TRACE메서드를 필터링 하도록합니다.

